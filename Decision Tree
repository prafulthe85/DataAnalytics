import pandas as pd
from sklearn.tree import DecisionTreeClassifier #DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics
col_names=['pregnant','glucose','bp','skin','insulin','bmi','pedigree','age','label']
pima=pd.read_csv('/content/diabetes.csv', header=1, names=col_names, sep=",", skiprows=1)
from re import X
feature_cols=['pregnant','glucose','bp','skin','insulin','bmi','pedigree','age','label']
X=pima[feature_cols]
Y=pima.label
X_train, X_test, Y_train, Y_test=train_test_split(X, Y, test_size=0.3, random_state=1)
clf=DecisionTreeClassifier()
clf=clf.fit(X_train, Y_train)
import pandas as pd
dataset=pd.read_csv('/content/diabetes.csv')
dataset.values.tolist()
pima=pd.read_csv('/content/diabetes.csv')
pima=pima.iloc[1:]
Y_pred=clf.predict(X_test)
print("Accuracy:", metrics.accuracy_score(Y_test,Y_pred))
pip install graphviz
pip install pydotplus
pip install six
import six
import sys
sys.modules['sklearn.externals.six']=six
from sklearn.tree import export_graphviz
from sklearn.externals.six import StringIO
from IPython.display import Image
import pydotplus
dot_data=StringIO()
export_graphviz(clf, out_file=dot_data,
                filled=True, rounded=True,
                special_characters=True, feature_names=feature_cols, class_names=['0','1']
  )
graph=pydotplus.graph_from_dot_data(dot_data.getvalue())
Image(graph.create_png())
clf=DecisionTreeClassifier(criterion="entropy", max_depth=3)
clf=clf.fit(X_train,Y_train)
Y_pred=clf.predict(X_test)
